{
    "appid": "3e2d908f-6506-4413-862c-b36f8fb98c1d",
    "name": "Tabular Report Generator",
    "description": "This app (TRG) provides actions to generate a tabular report that can be sent via email or stored as HTML to vault",
    "type": "information",
    "product_vendor": "Splunk Community",
    "logo": "logo_tabularreportgenerator.svg",
    "logo_dark": "logo_tabularreportgenerator_dark.svg",
    "product_name": "SOAR",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Splunk Community",
    "contributors": [
        {
            "name": "Daniel Federschmidt"
        }
    ],
    "license": "Copyright (c) Splunk Community, 2022",
    "app_version": "1.0.2",
    "utctime_updated": "2022-06-15T16:11:02.000000Z",
    "package_name": "phantom_tabularreportgenerator",
    "main_module": "tabularreportgenerator_connector.py",
    "min_phantom_version": "5.2.0",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "image_list": {
            "description": "Name of custom list storing images",
            "data_type": "string",
            "order": 0
        }
    },
    "pip3_dependencies": {
        "wheel": [
            {
                "module": "dataclasses",
                "input_file": "wheels/py3/dataclasses-0.8-py3-none-any.whl"
            },
            {
                "module": "pydantic",
                "input_file": "wheels/py36/pydantic-1.9.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
            },
            {
                "module": "typing_extensions",
                "input_file": "wheels/py3/typing_extensions-4.1.1-py3-none-any.whl"
            }
        ]
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "generate report email",
            "identifier": "generate_report_email",
            "description": "Generate raw email output containing the report",
            "type": "generic",
            "read_only": true,
            "parameters": {
                "report_json": {
                    "description": "Report specification in JSON format",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "trg report json"
                    ],
                    "order": 0
                },
                "from": {
                    "description": "Report specification in JSON format",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "to": {
                    "description": "Report specification in JSON format",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "subject": {
                    "description": "Subject of the email to be sent",
                    "data_type": "string",
                    "required": true,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.report_json",
                    "data_type": "string",
                    "contains": [
                        "trg report json"
                    ],
                    "column_name": "Report Json",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.from",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.to",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.subject",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.0.rawemail",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "pydantic",
                "input_file": "wheels/py39/pydantic-1.9.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
            },
            {
                "module": "typing_extensions",
                "input_file": "wheels/py3/typing_extensions-4.2.0-py3-none-any.whl"
            }
        ]
    }
}